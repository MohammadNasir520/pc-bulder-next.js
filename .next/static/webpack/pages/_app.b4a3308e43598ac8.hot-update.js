/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/redux/feature/component/componentSlice.js":
/*!*******************************************************!*\
  !*** ./src/redux/feature/component/componentSlice.js ***!
  \*******************************************************/
/***/ (function(module, __unused_webpack_exports, __webpack_require__) {

eval(__webpack_require__.ts("// import { createSlice, current } from '@reduxjs/toolkit'\n// const initialState = {\n//     components: []\n// }\n// export const componentSlice = createSlice({\n//     name: 'component',\n//     initialState,\n//     reducers: {\n//         addToStor: (state, action) => {\n//             const exist = state.components.find(component => component.category === action.payload.category)\n//             if (exist) {\n//                 console.log('exist', current(exist))\n//             }\n//             state.components.push({ ...action.payload })\n//         }\n//     },\n// })\n// export const { addToStor } = componentSlice.actions\n// export default componentSlice.reducer\n// import { createSlice } from '@reduxjs/toolkit';\n// const initialState = {\n//     components: [],\n// };\n// export const componentSlice = createSlice({\n//     name: 'component',\n//     initialState,\n//     reducers: {\n//         addToStor: (state, action) => {\n//             const existingComponentIndex = state.components.findIndex(\n//                 (component) => component.category === action.payload.category\n//             );\n//             if (existingComponentIndex >= 0) {\n//                 // If category already exists, replace the existing component with the new one\n//                 state.components[existingComponentIndex] = action.payload;\n//             } else {\n//                 // If category doesn't exist, add the new component to the components array\n//                 state.components.push({ ...action.payload });\n//             }\n//         },\n//     },\n// });\n// export const { addToStor } = componentSlice.actions;\n// export default componentSlice.reducer;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVkdXgvZmVhdHVyZS9jb21wb25lbnQvY29tcG9uZW50U2xpY2UuanMiLCJtYXBwaW5ncyI6IkFBQUEsMERBQTBEO0FBRTFELHlCQUF5QjtBQUN6QixxQkFBcUI7QUFDckIsSUFBSTtBQUVKLDhDQUE4QztBQUM5Qyx5QkFBeUI7QUFDekIsb0JBQW9CO0FBQ3BCLGtCQUFrQjtBQUNsQiwwQ0FBMEM7QUFDMUMsK0dBQStHO0FBQy9HLDJCQUEyQjtBQUUzQix1REFBdUQ7QUFDdkQsZ0JBQWdCO0FBQ2hCLDJEQUEyRDtBQUUzRCxZQUFZO0FBQ1osU0FBUztBQUNULEtBQUs7QUFDTCxzREFBc0Q7QUFFdEQsd0NBQXdDO0FBQ3hDLGtEQUFrRDtBQUVsRCx5QkFBeUI7QUFDekIsc0JBQXNCO0FBQ3RCLEtBQUs7QUFFTCw4Q0FBOEM7QUFDOUMseUJBQXlCO0FBQ3pCLG9CQUFvQjtBQUNwQixrQkFBa0I7QUFDbEIsMENBQTBDO0FBQzFDLHlFQUF5RTtBQUN6RSxnRkFBZ0Y7QUFDaEYsaUJBQWlCO0FBRWpCLGlEQUFpRDtBQUNqRCxpR0FBaUc7QUFDakcsNkVBQTZFO0FBQzdFLHVCQUF1QjtBQUN2Qiw4RkFBOEY7QUFDOUYsZ0VBQWdFO0FBQ2hFLGdCQUFnQjtBQUNoQixhQUFhO0FBQ2IsU0FBUztBQUNULE1BQU07QUFFTix1REFBdUQ7QUFFdkQseUNBQXlDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vX05fRS8uL3NyYy9yZWR1eC9mZWF0dXJlL2NvbXBvbmVudC9jb21wb25lbnRTbGljZS5qcz9jNzgxIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIGltcG9ydCB7IGNyZWF0ZVNsaWNlLCBjdXJyZW50IH0gZnJvbSAnQHJlZHV4anMvdG9vbGtpdCdcclxuXHJcbi8vIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcclxuLy8gICAgIGNvbXBvbmVudHM6IFtdXHJcbi8vIH1cclxuXHJcbi8vIGV4cG9ydCBjb25zdCBjb21wb25lbnRTbGljZSA9IGNyZWF0ZVNsaWNlKHtcclxuLy8gICAgIG5hbWU6ICdjb21wb25lbnQnLFxyXG4vLyAgICAgaW5pdGlhbFN0YXRlLFxyXG4vLyAgICAgcmVkdWNlcnM6IHtcclxuLy8gICAgICAgICBhZGRUb1N0b3I6IChzdGF0ZSwgYWN0aW9uKSA9PiB7XHJcbi8vICAgICAgICAgICAgIGNvbnN0IGV4aXN0ID0gc3RhdGUuY29tcG9uZW50cy5maW5kKGNvbXBvbmVudCA9PiBjb21wb25lbnQuY2F0ZWdvcnkgPT09IGFjdGlvbi5wYXlsb2FkLmNhdGVnb3J5KVxyXG4vLyAgICAgICAgICAgICBpZiAoZXhpc3QpIHtcclxuXHJcbi8vICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnZXhpc3QnLCBjdXJyZW50KGV4aXN0KSlcclxuLy8gICAgICAgICAgICAgfVxyXG4vLyAgICAgICAgICAgICBzdGF0ZS5jb21wb25lbnRzLnB1c2goeyAuLi5hY3Rpb24ucGF5bG9hZCB9KVxyXG5cclxuLy8gICAgICAgICB9XHJcbi8vICAgICB9LFxyXG4vLyB9KVxyXG4vLyBleHBvcnQgY29uc3QgeyBhZGRUb1N0b3IgfSA9IGNvbXBvbmVudFNsaWNlLmFjdGlvbnNcclxuXHJcbi8vIGV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudFNsaWNlLnJlZHVjZXJcclxuLy8gaW1wb3J0IHsgY3JlYXRlU2xpY2UgfSBmcm9tICdAcmVkdXhqcy90b29sa2l0JztcclxuXHJcbi8vIGNvbnN0IGluaXRpYWxTdGF0ZSA9IHtcclxuLy8gICAgIGNvbXBvbmVudHM6IFtdLFxyXG4vLyB9O1xyXG5cclxuLy8gZXhwb3J0IGNvbnN0IGNvbXBvbmVudFNsaWNlID0gY3JlYXRlU2xpY2Uoe1xyXG4vLyAgICAgbmFtZTogJ2NvbXBvbmVudCcsXHJcbi8vICAgICBpbml0aWFsU3RhdGUsXHJcbi8vICAgICByZWR1Y2Vyczoge1xyXG4vLyAgICAgICAgIGFkZFRvU3RvcjogKHN0YXRlLCBhY3Rpb24pID0+IHtcclxuLy8gICAgICAgICAgICAgY29uc3QgZXhpc3RpbmdDb21wb25lbnRJbmRleCA9IHN0YXRlLmNvbXBvbmVudHMuZmluZEluZGV4KFxyXG4vLyAgICAgICAgICAgICAgICAgKGNvbXBvbmVudCkgPT4gY29tcG9uZW50LmNhdGVnb3J5ID09PSBhY3Rpb24ucGF5bG9hZC5jYXRlZ29yeVxyXG4vLyAgICAgICAgICAgICApO1xyXG5cclxuLy8gICAgICAgICAgICAgaWYgKGV4aXN0aW5nQ29tcG9uZW50SW5kZXggPj0gMCkge1xyXG4vLyAgICAgICAgICAgICAgICAgLy8gSWYgY2F0ZWdvcnkgYWxyZWFkeSBleGlzdHMsIHJlcGxhY2UgdGhlIGV4aXN0aW5nIGNvbXBvbmVudCB3aXRoIHRoZSBuZXcgb25lXHJcbi8vICAgICAgICAgICAgICAgICBzdGF0ZS5jb21wb25lbnRzW2V4aXN0aW5nQ29tcG9uZW50SW5kZXhdID0gYWN0aW9uLnBheWxvYWQ7XHJcbi8vICAgICAgICAgICAgIH0gZWxzZSB7XHJcbi8vICAgICAgICAgICAgICAgICAvLyBJZiBjYXRlZ29yeSBkb2Vzbid0IGV4aXN0LCBhZGQgdGhlIG5ldyBjb21wb25lbnQgdG8gdGhlIGNvbXBvbmVudHMgYXJyYXlcclxuLy8gICAgICAgICAgICAgICAgIHN0YXRlLmNvbXBvbmVudHMucHVzaCh7IC4uLmFjdGlvbi5wYXlsb2FkIH0pO1xyXG4vLyAgICAgICAgICAgICB9XHJcbi8vICAgICAgICAgfSxcclxuLy8gICAgIH0sXHJcbi8vIH0pO1xyXG5cclxuLy8gZXhwb3J0IGNvbnN0IHsgYWRkVG9TdG9yIH0gPSBjb21wb25lbnRTbGljZS5hY3Rpb25zO1xyXG5cclxuLy8gZXhwb3J0IGRlZmF1bHQgY29tcG9uZW50U2xpY2UucmVkdWNlcjtcclxuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///./src/redux/feature/component/componentSlice.js\n"));

/***/ }),

/***/ "./src/redux/store.js":
/*!****************************!*\
  !*** ./src/redux/store.js ***!
  \****************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   store: function() { return /* binding */ store; }\n/* harmony export */ });\n/* harmony import */ var _reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @reduxjs/toolkit */ \"./node_modules/@reduxjs/toolkit/dist/redux-toolkit.esm.js\");\n/* harmony import */ var _feature_component_componentSlice__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./feature/component/componentSlice */ \"./src/redux/feature/component/componentSlice.js\");\n/* harmony import */ var _feature_component_componentSlice__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_feature_component_componentSlice__WEBPACK_IMPORTED_MODULE_0__);\n\n\nconst store = (0,_reduxjs_toolkit__WEBPACK_IMPORTED_MODULE_1__.configureStore)({\n    reducer: {\n        components: (_feature_component_componentSlice__WEBPACK_IMPORTED_MODULE_0___default())\n    }\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9zcmMvcmVkdXgvc3RvcmUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFpRDtBQUNnQjtBQUUxRCxNQUFNRSxRQUFRRixnRUFBY0EsQ0FBQztJQUNoQ0csU0FBUztRQUNMQyxZQUFZSCwwRUFBZ0JBO0lBQ2hDO0FBQ0osR0FBRSIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvcmVkdXgvc3RvcmUuanM/ZGQ0OSJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBjb25maWd1cmVTdG9yZSB9IGZyb20gJ0ByZWR1eGpzL3Rvb2xraXQnXHJcbmltcG9ydCBjb21wb25lbnRSZWR1Y2VyIGZyb20gJy4vZmVhdHVyZS9jb21wb25lbnQvY29tcG9uZW50U2xpY2UnXHJcblxyXG5leHBvcnQgY29uc3Qgc3RvcmUgPSBjb25maWd1cmVTdG9yZSh7XHJcbiAgICByZWR1Y2VyOiB7XHJcbiAgICAgICAgY29tcG9uZW50czogY29tcG9uZW50UmVkdWNlclxyXG4gICAgfSxcclxufSkiXSwibmFtZXMiOlsiY29uZmlndXJlU3RvcmUiLCJjb21wb25lbnRSZWR1Y2VyIiwic3RvcmUiLCJyZWR1Y2VyIiwiY29tcG9uZW50cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///./src/redux/store.js\n"));

/***/ })

});